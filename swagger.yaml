openapi: 3.0.0
info:
  description: Nimbus leverages machine learning algorithms to provide personalised financial advice, income budgeting and investment suggestions.
  version: "1.0.0"
  title: Nimbus API
  contact:
    name: Elikem Gale Zoyiku
    email: egalezoyiku@gmail.com
  license:
    name: MIT
    url: "https://github.com/Si-kaR/NIMBUS/blob/main/LICENSE"
servers:
  - description: localhost
    url: http://localhost:5000
  - description: live server
    url: http://64.225.12.127:5000
tags:
  - name: Investment
    description: Functionalities related to investment suggestions
  - name: Financial Literacy
    description: Functionalities related to financial literacy content
  - name: User Management
    description: Functionalities related to handling user information

paths:
  /risk_level_assignment:
    post:
      tags:
        - Investment
      summary: Get risk level assignment
      description: Assigns a risk tolerance level for a user based on their quiz responses.
      requestBody:
        content:
          "application/x-www-form-urlencoded":
            schema:
              type: object
              properties:
                user_id:
                  description: The ID of the user
                  type: integer
                quiz:
                  description: The quiz questions taken
                  type: object
                responses:
                  description: The answers given by the user
                  type: string
              required:
                - user_id
                - quiz
                - responses
      responses:
        "200":
          description: Risk level assigned successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RiskLevelAssignment"
        "400":
          description: Invalid input parameter
        "500":
          description: Internal Server Error

  /get_risk_assessment:
    get:
      tags:
        - Investment
      summary: Get risk assessment questions
      description: Retrieves a list of questions to assess a user's risk tolerance level.
      responses:
        "200":
          description: Risk assessment questions retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetRiskAssessment"
        "500":
          description: Internal Server Error

  /register_user:
    post:
      tags:
        - User Management
      summary: Registers a new user
      requestBody:
        content:
          "application/x-www-form-urlencoded":
            schema:
              type: object
              properties:
                username:
                  description: A unique username
                  type: string
              required:
                - username
      responses:
        "200":
          description: User registered successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserResponse"
        "500":
          description: Internal Server Error

  /diverse_portfolio:
    post:
      tags:
        - Investment
      summary: Suggests an investment diversification
      requestBody:
        content:
          "application/x-www-form-urlencoded":
            schema:
              type: object
              properties:
                user_id:
                  description: A user's ID
                  type: integer
              required:
                - user_id
      responses:
        "200":
          description: User registered successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DiversifyResponse"
        "500":
          description: Internal Server Error

  /income_allocation:
    post:
      tags:
        - Investment
      summary: Suggests how a user can allocate their earnings
      requestBody:
        content:
          "application/x-www-form-urlencoded":
            schema:
              type: object
              properties:
                total_income:
                  description: A user's total salary
                  type: integer
                amount_invested:
                  description: The amount a user is willing to invest
                  type: integer
                amount_essentials:
                  description: A user's emergency fund allocation
                  type: integer
                amount_discretionary:
                  type: integer
                risk_tolerance:
                  description: A user's risk tolerance level
                  type: string
              required:
                - total_income
                - amount_invested
                - amount_essentials
                - amount_discretionary
                - risk_tolerance
      responses:
        "200":
          description: Income allocation retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AllocationResponse"
        "500":
          description: Internal Server Error

  /get_faqs:
    get:
      tags:
        - Financial Literacy
      summary: Retrieves a list of frequently asked questions about financial education
      responses:
        "200":
          description: FAQs retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FAQResponse"
        "500":
          description: Internal Server Error

components:
  schemas:
    RiskLevelAssignment:
      type: object
      properties:
        risk_level:
          type: string
        status:
          type: string
    GetRiskAssessment:
      type: object
      properties:
        questions:
          type: string
        status:
          type: string
    UserResponse:
      type: object
      properties:
        status:
          type: string
        user_id:
          type: integer
    DiversifyResponse:
      type: object
      properties:
        portfolio:
          type: string
        status:
          type: string
    AllocationResponse:
      type: object
      properties:
        status:
          type: string
        updated_data:
          type: string
    FAQResponse:
      type: object
      properties:
        faqs:
          type: string
        status:
          type: string
